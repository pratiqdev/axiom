[{"C:\\Users\\Shlep\\Documents\\code\\reacto\\axiom\\src\\reportWebVitals.js":"1","C:\\Users\\Shlep\\Documents\\code\\reacto\\axiom\\src\\pages\\Creator.js":"2","C:\\Users\\Shlep\\Documents\\code\\reacto\\axiom\\src\\App.js":"3"},{"size":375,"mtime":1612201822072,"results":"4","hashOfConfig":"5"},{"size":2228,"mtime":1612381077976,"results":"6","hashOfConfig":"5"},{"size":595,"mtime":1612378087351,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2tz6zu",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shlep\\Documents\\code\\reacto\\axiom\\src\\reportWebVitals.js",[],"C:\\Users\\Shlep\\Documents\\code\\reacto\\axiom\\src\\pages\\Creator.js",["15"],"import React from 'react'\r\nimport { v4 } from 'uuid';\r\n\r\nclass Creator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        shouldSave: false,\r\n        deets: {\r\n            title:'',\r\n            subtitle:'',\r\n            tage:'',\r\n            grasp:'',\r\n            body:[\r\n                {type:'text', value:'This is a placeholder text object'},\r\n                {type:'text', value:'This is another placeholder text object'},\r\n                {type:'text', value:'End of deets...'}\r\n            ]\r\n\r\n        }\r\n    };\r\n\r\n    // This binding is necessary to make `this` work in the callback??\r\n    // this.addItem = this.addItem.bind(this);\r\n  }\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////  block on refresh / reload\r\ncomponentDidUpdate = () => {\r\n    // console.log('component did update!')\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////// for each of the body elements -> return a premade component\r\ncreateItem = item => {\r\n    // let area = document.getElementById()\r\n    switch(item.type || item){\r\n        case 'text': return <p onClick={() => this.editItem(item.id)} key={v4()}>{item.value}</p>;\r\n        case 'h2': return <h2  onClick={() => this.editItem(item.id)} key={v4()}>{item.value}</h2>;\r\n        default: return <p key={v4()}>--- ERROR ---</p>;\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////  add a new item to the article\r\naddItem = e => {\r\n    let type = e.target.name\r\n    // console.log('create item: '+type)\r\n    this.state.deets.body.push({type:type, value:'NEW ITEM', id:v4()}) \r\n  this.forceUpdate()    \r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////  edit the new item and save\r\neditItem = item => {\r\n    console.log(item)\r\n    this.state.deets.body.filter(el => {\r\n        \r\n    })\r\n}\r\n\r\nrender() {\r\nreturn (\r\n<>  \r\n    <h2>Creator</h2>\r\n    <div id=\"preview\">\r\n        <button name=\"h2\" onClick={this.addItem}>Heading</button>\r\n        <button name=\"text\" onClick={this.addItem}>Text</button>\r\n        {this.state.deets.body.map(item => this.createItem(item))}\r\n    </div>\r\n</>\r\n);\r\n}\r\n}\r\n\r\nexport default Creator","C:\\Users\\Shlep\\Documents\\code\\reacto\\axiom\\src\\App.js",[],{"ruleId":"16","severity":1,"message":"17","line":54,"column":37,"nodeType":"18","messageId":"19","endLine":54,"endColumn":39},"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]